name: Checks

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  verify-files:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
    steps:
      - uses: actions/checkout@v4
      - name: Verify required files
        run: |
          set -euo pipefail
          if [ ! -f README.md ]; then
            echo "README.md is missing"
            exit 1
          fi
          if [ ! -d ".version" ]; then
            echo ".version directory is missing"
            exit 1
          fi
          echo "All required files are present."
           
           lint-scripts:
           runs-on: ${{ matrix.os }}
              strategy:
                matrix:
                os: [ubuntu-20.04, ubuntu-22.04]
            steps:
      - uses: actions/checkout@v4

      - name: Run shellcheck on install.sh
        run: |
          set -euo pipefail
          if [ -f install.sh ]; then
            shellcheck -e SC1090,SC2086,SC2024,SC2164 install.sh || {
              echo "Shellcheck failed for install.sh"
              exit 1
          }
          echo "install.sh passed shellcheck."
          else
          echo "install.sh not found, skipping."
          fi

          - name: Dry-run install.sh (syntax + execution test)
            run: |
            set -euo pipefail
          if [ -f install.sh ]; then
          echo "Running dry-run test of install.sh..."
          bash -n install.sh || {
            echo "Syntax check failed at runtime for install.sh"
            exit 1
          }
          # Run script with safe flags if supported
          if grep -q "set -n" install.sh || grep -q "dry-run" install.sh; then
            ./install.sh --dry-run || {
              echo "Dry-run execution failed for install.sh"
              exit 1
            }
            echo "Dry-run execution succeeded."
          else
            echo "No dry-run mode found, only syntax was checked."
           fi
          fi
